{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://D%3A/project/srijana/Scrapping_movie/movie_streaming/app/page.tsx"],"sourcesContent":["'use client'\nimport { useState, useEffect } from 'react';\nimport Image from 'next/image';\nimport { Movie } from '@/types';\n\nexport default function Home() {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [featuredMovie, setFeaturedMovie] = useState<Movie | null>(null);\n  const [loading, setLoading] = useState(true);\n  \n  const API_KEY = '1ceba15c8e9306a14c1ed7d52a4e4aa0';\n  const BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/original';\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(\n          `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc`\n        );\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log('API Response:', data); // Debug log\n        \n        if (data.results && data.results.length > 0) {\n          setMovies(data.results);\n          setFeaturedMovie(data.results[0]);\n        }\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  if (loading) {\n    return <div className=\"h-screen bg-black text-white flex items-center justify-center\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-black text-white\">\n      {/* Featured Movie Section */}\n      {featuredMovie && (\n        <section className=\"relative h-[85vh] w-full\">\n          {/* Background Image Wrapper */}\n          <div className=\"absolute inset-0\">\n            <Image\n              src={`${BASE_IMAGE_URL}${featuredMovie.backdrop_path}`}\n              alt={featuredMovie.title}\n              width={1920}\n              height={1080}\n              className=\"w-full h-full object-cover\"\n              priority\n            />\n            {/* Gradient overlays */}\n            <div className=\"absolute inset-0 bg-gradient-to-t from-black via-black/60 to-transparent\" />\n            <div className=\"absolute inset-0 bg-gradient-to-r from-black/50 via-transparent to-transparent\" />\n          </div>\n\n          {/* Movie Info */}\n          <div className=\"absolute bottom-32 left-12 z-10 max-w-2xl\">\n            <h1 className=\"text-6xl font-bold mb-4\">{featuredMovie.title}</h1>\n            <p className=\"text-lg text-gray-200 mb-6\">\n              {featuredMovie.overview}\n            </p>\n            <div className=\"flex items-center gap-4\">\n              <span className=\"bg-yellow-400 text-black px-4 py-1.5 rounded-md\">\n                IMDB: {featuredMovie.vote_average.toFixed(1)}\n              </span>\n              <span className=\"bg-white/20 px-4 py-1.5 rounded-md\">\n                Released On: Jun {new Date(featuredMovie.release_date).getDate()}\n              </span>\n            </div>\n          </div>\n        </section>\n      )}\n\n      {/* Upcoming Movies Section */}\n      <section className=\"px-12 py-8\">\n        <h2 className=\"text-2xl font-bold mb-6\">Upcoming Movies</h2>\n        <div className=\"flex space-x-4 overflow-x-auto\">\n          {movies.slice(0, 9).map((movie) => (\n            <div key={movie.id} className=\"flex-none w-[180px]\">\n              <div className=\"relative h-[270px] mb-2 rounded-lg overflow-hidden\">\n                <Image\n                  src={`${BASE_IMAGE_URL}${movie.poster_path}`}\n                  alt={movie.title}\n                  width={180}\n                  height={270}\n                  className=\"w-full h-full object-cover\"\n                />\n                <div className=\"absolute inset-0 bg-black/20 transition-colors hover:bg-black/40\" />\n              </div>\n              <h3 className=\"font-medium text-sm truncate\">{movie.title}</h3>\n              <p className=\"text-xs text-gray-500\">\n                {new Date(movie.release_date).getFullYear()}\n              </p>\n            </div>\n          ))}\n        </div>\n      </section>\n\n      {/* Debug Info */}\n      <div className=\"fixed top-0 left-0 bg-black/50 p-2 text-xs\">\n        Featured Movie: {featuredMovie?.title}\n        <br />\n        Total Movies: {movies.length}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}