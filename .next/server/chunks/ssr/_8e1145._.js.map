{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/project/srijana/Scrapping_movie/movie_streaming/app/page.tsx"],"sourcesContent":["// app/types.ts\nexport interface Movie {\n  id: number;\n  title: string;\n  backdrop_path: string;\n  poster_path: string;\n  overview: string;\n  vote_average: number;\n  release_date: string;\n}\n\n// app/page.tsx\n'use client'\nimport { useState, useEffect } from 'react';\nimport Image from 'next/image';\nimport { Movie } from './types';\n\nexport default function Home() {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [featuredMovie, setFeaturedMovie] = useState<Movie | null>(null);\n  \n  const API_KEY = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxY2ViYTE1YzhlOTMwNmExNGMxZWQ3ZDUyYTRlNGFhMCIsInNiZiI6MTczMjYxMjEwNC4xMTAzNDA0LCJzdWIiOiI2NzQ1OGRkMzgwYjQ0YTg5MzdiN2MzNDUiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.f5pYhZOw9kt_ZFyPzWay-D1seZ2dOGJ43W7Mb5-a-A0';\n  const BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/original';\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const response = await fetch('https://api.themoviedb.org/3/discover/movie', {\n          headers: {\n            Authorization: `Bearer ${API_KEY}`,\n            'Content-Type': 'application/json',\n          },\n        });\n        const data = await response.json();\n        setMovies(data.results);\n        setFeaturedMovie(data.results[0]); // Set first movie as featured\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <main className=\"min-h-screen bg-black text-white\">\n      {/* Featured Movie Banner */}\n      {featuredMovie && (\n        <div className=\"relative h-screen\">\n          <div className=\"absolute inset-0\">\n            <Image\n              src={`${BASE_IMAGE_URL}${featuredMovie.backdrop_path}`}\n              alt={featuredMovie.title}\n              fill\n              className=\"object-cover\"\n              priority\n            />\n            {/* Gradient Overlay */}\n            <div className=\"absolute inset-0 bg-gradient-to-t from-black via-black/50 to-transparent\" />\n          </div>\n          \n          {/* Movie Details */}\n          <div className=\"relative z-10 h-full flex flex-col justify-end px-8 pb-20\">\n            <h1 className=\"text-6xl font-bold mb-4\">{featuredMovie.title}</h1>\n            <div className=\"flex items-center gap-4 mb-4\">\n              <span className=\"bg-yellow-400 text-black px-3 py-1 rounded-full\">\n                IMDB: {featuredMovie.vote_average.toFixed(1)}\n              </span>\n              <span className=\"bg-white/20 px-3 py-1 rounded-full\">\n                Released: {new Date(featuredMovie.release_date).toLocaleDateString()}\n              </span>\n            </div>\n            <p className=\"max-w-2xl text-lg mb-8\">{featuredMovie.overview}</p>\n          </div>\n        </div>\n      )}\n\n      {/* Upcoming Movies Section */}\n      <section className=\"px-8 py-12 bg-black\">\n        <h2 className=\"text-3xl font-bold mb-8\">Upcoming Movies</h2>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6\">\n          {movies.map((movie) => (\n            <div key={movie.id} className=\"relative group cursor-pointer\">\n              <div className=\"aspect-[2/3] relative rounded-lg overflow-hidden\">\n                <Image\n                  src={`${BASE_IMAGE_URL}${movie.poster_path}`}\n                  alt={movie.title}\n                  fill\n                  className=\"object-cover transition-transform group-hover:scale-110\"\n                />\n                <div className=\"absolute inset-0 bg-black/40 group-hover:bg-black/60 transition-colors\" />\n              </div>\n              <h3 className=\"mt-2 text-lg font-semibold\">{movie.title}</h3>\n              <p className=\"text-sm text-gray-400\">\n                {new Date(movie.release_date).getFullYear()}\n              </p>\n            </div>\n          ))}\n        </div>\n      </section>\n    </main>\n  );\n}\n"],"names":[],"mappings":"AAAA,eAAe;;;;;AAaf;AACA;AAHA,eAAe;AACf;;;;AAKe,SAAS;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAChD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB;IAEjE,MAAM,UAAU;IAChB,MAAM,iBAAiB;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,cAAc;YAClB,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,+CAA+C;oBAC1E,SAAS;wBACP,eAAe,CAAC,OAAO,EAAE,SAAS;wBAClC,gBAAgB;oBAClB;gBACF;gBACA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,UAAU,KAAK,OAAO;gBACtB,iBAAiB,KAAK,OAAO,CAAC,EAAE,GAAG,8BAA8B;YACnE,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,0BAA0B;YAC1C;QACF;QAEA;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC;QAAK,WAAU;;YAEb,+BACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,6HAAA,CAAA,UAAK;gCACJ,KAAK,GAAG,iBAAiB,cAAc,aAAa,EAAE;gCACtD,KAAK,cAAc,KAAK;gCACxB,IAAI;gCACJ,WAAU;gCACV,QAAQ;;;;;;0CAGV,8OAAC;gCAAI,WAAU;;;;;;;;;;;;kCAIjB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAA2B,cAAc,KAAK;;;;;;0CAC5D,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAK,WAAU;;4CAAkD;4CACzD,cAAc,YAAY,CAAC,OAAO,CAAC;;;;;;;kDAE5C,8OAAC;wCAAK,WAAU;;4CAAqC;4CACxC,IAAI,KAAK,cAAc,YAAY,EAAE,kBAAkB;;;;;;;;;;;;;0CAGtE,8OAAC;gCAAE,WAAU;0CAA0B,cAAc,QAAQ;;;;;;;;;;;;;;;;;;0BAMnE,8OAAC;gBAAQ,WAAU;;kCACjB,8OAAC;wBAAG,WAAU;kCAA0B;;;;;;kCACxC,8OAAC;wBAAI,WAAU;kCACZ,OAAO,GAAG,CAAC,CAAC,sBACX,8OAAC;gCAAmB,WAAU;;kDAC5B,8OAAC;wCAAI,WAAU;;0DACb,8OAAC,6HAAA,CAAA,UAAK;gDACJ,KAAK,GAAG,iBAAiB,MAAM,WAAW,EAAE;gDAC5C,KAAK,MAAM,KAAK;gDAChB,IAAI;gDACJ,WAAU;;;;;;0DAEZ,8OAAC;gDAAI,WAAU;;;;;;;;;;;;kDAEjB,8OAAC;wCAAG,WAAU;kDAA8B,MAAM,KAAK;;;;;;kDACvD,8OAAC;wCAAE,WAAU;kDACV,IAAI,KAAK,MAAM,YAAY,EAAE,WAAW;;;;;;;+BAZnC,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;AAoB9B"}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}