{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/project/srijana/Scrapping_movie/movie_streaming/app/components/MovieBanner.tsx"],"sourcesContent":["// app/components/MovieBanner.tsx\r\nexport default function MovieBanner({ movie }: { movie: any }) {\r\n  if (!movie) return null;\r\n  \r\n  const backdropUrl = `https://image.tmdb.org/t/p/original${movie.backdrop_path}`;\r\n  \r\n  return (\r\n    <div className=\"relative h-[85vh] w-full\">\r\n      <div \r\n        style={{ backgroundImage: `url(${backdropUrl})` }}\r\n        className=\"absolute inset-0 bg-cover bg-center\"\r\n      >\r\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black via-black/50 to-transparent\">\r\n          <div className=\"container mx-auto h-full flex flex-col justify-end pb-20 px-4\">\r\n            <div className=\"max-w-2xl\">\r\n              <h1 className=\"text-5xl md:text-6xl font-bold text-white mb-4\">\r\n                {movie.title}\r\n              </h1>\r\n              <p className=\"text-lg text-gray-200 mb-6\">\r\n                {movie.overview}\r\n              </p>\r\n              <div className=\"flex items-center gap-4 text-white\">\r\n                <div className=\"bg-yellow-500 text-black px-3 py-1 rounded-full\">\r\n                  IMDB: {movie.vote_average.toFixed(1)}\r\n                </div>\r\n                <div className=\"bg-white/20 px-3 py-1 rounded-full\">\r\n                  Released On: {new Date(movie.release_date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;;;AAClB,SAAS,YAAY,EAAE,KAAK,EAAkB;IAC3D,IAAI,CAAC,OAAO,OAAO;IAEnB,MAAM,cAAc,CAAC,mCAAmC,EAAE,MAAM,aAAa,EAAE;IAE/E,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,OAAO;gBAAE,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YAAC;YAChD,WAAU;sBAEV,cAAA,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CACX,MAAM,KAAK;;;;;;0CAEd,8OAAC;gCAAE,WAAU;0CACV,MAAM,QAAQ;;;;;;0CAEjB,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;4CAAkD;4CACxD,MAAM,YAAY,CAAC,OAAO,CAAC;;;;;;;kDAEpC,8OAAC;wCAAI,WAAU;;4CAAqC;4CACpC,IAAI,KAAK,MAAM,YAAY,EAAE,kBAAkB,CAAC,SAAS;gDAAE,OAAO;gDAAS,KAAK;4CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS1H"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file://D%3A/project/srijana/Scrapping_movie/movie_streaming/app/components/TrendingMovies.tsx"],"sourcesContent":["// app/components/TrendingMovies.tsx\r\nimport Image from 'next/image';\r\n\r\nexport default function TrendingMovies({ movies }: { movies: any[] }) {\r\n  if (!movies?.length) return null;\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6\">\r\n      {movies.map((movie) => (\r\n        <div key={movie.id} className=\"group\">\r\n          <div className=\"relative aspect-[2/3] rounded-lg overflow-hidden\">\r\n            <Image\r\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n              alt={movie.title}\r\n              fill\r\n              className=\"object-cover transition-all duration-300 group-hover:scale-105\"\r\n              sizes=\"(max-width: 768px) 50vw, (max-width: 1200px) 33vw, 20vw\"\r\n            />\r\n            <div className=\"absolute inset-0 bg-black/60 opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\r\n              <div className=\"absolute bottom-0 left-0 right-0 p-4\">\r\n                <h3 className=\"text-white font-semibold text-sm mb-2\">\r\n                  {movie.title}\r\n                </h3>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <span className=\"text-yellow-500 text-xs\">\r\n                    {movie.vote_average.toFixed(1)}\r\n                  </span>\r\n                  <span className=\"text-gray-300 text-xs\">\r\n                    {new Date(movie.release_date).getFullYear()}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"AAAA,oCAAoC;;;;;AACpC;;;AAEe,SAAS,eAAe,EAAE,MAAM,EAAqB;IAClE,IAAI,CAAC,QAAQ,QAAQ,OAAO;IAE5B,qBACE,8OAAC;QAAI,WAAU;kBACZ,OAAO,GAAG,CAAC,CAAC,sBACX,8OAAC;gBAAmB,WAAU;0BAC5B,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,6HAAA,CAAA,UAAK;4BACJ,KAAK,CAAC,+BAA+B,EAAE,MAAM,WAAW,EAAE;4BAC1D,KAAK,MAAM,KAAK;4BAChB,IAAI;4BACJ,WAAU;4BACV,OAAM;;;;;;sCAER,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAG,WAAU;kDACX,MAAM,KAAK;;;;;;kDAEd,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAK,WAAU;0DACb,MAAM,YAAY,CAAC,OAAO,CAAC;;;;;;0DAE9B,8OAAC;gDAAK,WAAU;0DACb,IAAI,KAAK,MAAM,YAAY,EAAE,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAnB3C,MAAM,EAAE;;;;;;;;;;AA6B1B"}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file://D%3A/project/srijana/Scrapping_movie/movie_streaming/app/page.tsx"],"sourcesContent":["// app/page.tsx\nimport MovieBanner from './components/MovieBanner';\nimport TrendingMovies from './components/TrendingMovies';\n\nasync function getMovies() {\n  const API_KEY = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxY2ViYTE1YzhlOTMwNmExNGMxZWQ3ZDUyYTRlNGFhMCIsIm5iZiI6MTczMjYxMjEwNC4xMTAzNDA0LCJzdWIiOiI2NzQ1OGRkMzgwYjQ0YTg5MzdiN2MzNDUiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.f5pYhZOw9kt_ZFyPzWay-D1seZ2dOGJ43W7Mb5-a-A0';\n\n  const options = {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${API_KEY}`,\n      'Content-Type': 'application/json'\n    }\n  };\n\n  try {\n    const res = await fetch('https://api.themoviedb.org/3/discover/movie', options);\n    const data = await res.json();\n    return data.results;\n  } catch (error) {\n    console.error('Error:', error);\n    return [];\n  }\n}\n\nexport default async function Home() {\n  const movies = await getMovies();\n\n  return (\n    <main className=\"min-h-screen bg-black\">\n      <MovieBanner movie={movies[0]} />\n      <div className=\"container mx-auto px-4 py-8\">\n        <h2 className=\"text-2xl font-bold text-white mb-6\">Upcoming Movies</h2>\n        <TrendingMovies movies={movies.slice(1)} /> {/* Pass all movies except the first one */}\n      </div>\n    </main>\n  );\n}"],"names":[],"mappings":"AAAA,eAAe;;;;;AACf;AACA;;;;AAEA,eAAe;IACb,MAAM,UAAU;IAEhB,MAAM,UAAU;QACd,QAAQ;QACR,SAAS;YACP,iBAAiB,CAAC,OAAO,EAAE,SAAS;YACpC,gBAAgB;QAClB;IACF;IAEA,IAAI;QACF,MAAM,MAAM,MAAM,MAAM,+CAA+C;QACvE,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,OAAO,KAAK,OAAO;IACrB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,UAAU;QACxB,OAAO,EAAE;IACX;AACF;AAEe,eAAe;IAC5B,MAAM,SAAS,MAAM;IAErB,qBACE,8OAAC;QAAK,WAAU;;0BACd,8OAAC,iIAAA,CAAA,UAAW;gBAAC,OAAO,MAAM,CAAC,EAAE;;;;;;0BAC7B,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAqC;;;;;;kCACnD,8OAAC,oIAAA,CAAA,UAAc;wBAAC,QAAQ,OAAO,KAAK,CAAC;;;;;;oBAAM;;;;;;;;;;;;;AAInD"}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}